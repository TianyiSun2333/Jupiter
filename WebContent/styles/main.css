* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body {
    background-color: #434343;
    /*em: the size relative to its parent, default 16*/
    font-size: 0.9em;
    color: #FFFFFF;
    /*  for every character,
        check if the first font can be used
        if cannot, use the second one, and so on
        sans-serif is a general font family, for this choice,
        it is browser to determine which font to use
    */
    font-family: 'Open Sans', sans-serif;
    /* thin or thick */
    font-weight: 300;
}

ul {
    /* remove the front icon of every item in the list*/
    list-style: none;
}

.top-header {
    background-color:  #DF574B;
    /* shadow, <x right> <y down> <z up> <color>*/
    box-shadow: 0px 2px 10px #333333;

    position: fixed;
    top: 0;
    z-index: 1;

    height: 60px;
    /* relative to its containner*/
    width: 100%;

	/* 弹性container: by default along the horizontal way */
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.avatar {
    background: #FFFFFF;
    color: #333C4D;

    height: 40px;
    width: 40px;
    margin-right: 20px;

    border-radius: 50%;

    padding-left: 9px;
    padding-top: 5px;
}

.top-nav {
    /*  flex-grow: 1; 
    	how much space an item to take the spare space
    	if 90px left along the horizontal axis, 
    	1st div flex-grow: 1; 2nd div flex-grow: 2;
    	then 1st will increase 30px, 2nd will gain 60px;
        
        flex-shrink: 1;
        if the total width is larger than the parent width,
        child div need to be shrank, the proportion of shrinking is this param
        
        flex-basis: 0%;
        to reserve space from parent first, then the left space
        can be counted as spare space
    */
    /* 等比放置 */
    flex: 1;
}

.top-nav a {
    color: #F9F9F9;
    font-weight: 400;
    margin-left: 20px;
    text-decoration: none;
}

#welcome-msg {
    boder-right: 1px solid #FFFFFF;
    padding-right: 10px;
}

.container {
    /* remain place for header */
    margin: 60px auto;
    /* can change with the window */
    max-width: 1000px;
    min-width: 600px;
}

.container>header {
    display: flex;
     /* an attribute of flex: align the divs in current box */
    align-items: center;

    background:
        url("http://folkartcarsi.com/img/4.jpg")
        no-repeat
        /* position attribute of background: the starting postion*/
        50% 50%;
    /* the image zoom in or zoom out */
    background-size: 100%;

    height: 250px;
}

/* p: the child of header*/
.container>header p {
    border-left: 1px solid #FFFFFF;
    font-weight: 400;
    font-size: 2em;
    line-height: 1em;
    margin-left: 220px;
    padding-left: 5px;
}

.container>header span {
    color: #FBAF41;
}

.main-section {
    background: #F3BB43;
}

#item-nav {
    float:left;
    width: 180px;
}

.nav-icon {
    color: #624630;
    padding: 20px;
    text-align: center;
}

.main-nav-btn {
    background: none;
    border-top: 1px solid #FFFFFF;
    color: #FFFFFF;
    /*根据CSS规范的规定，每一个网页元素都有一个display属性，
    用于确定该元素的类型，每一个元素都有默认的display属性值，
    比如div元素，它的默认display属性值为“block”，成为“块级”元素(block-level)；
    而span元素的默认display属性值为“inline”，称为“行内”元素。

    块级元素：
    动占据一定矩形空间，可以通过设置高度、宽度、内外边距等属性，来调整的此矩形的样子；
    行内元素：
    自己的独立空间，它是依附于其他块级元素存在的，
    因此，对行内元素设置高度、宽度、内外边距等属性，都是无效的。

    例子：
    链接 a 元素，在默认情况下是是“行内元素”，
    因此对a元素设置高度、宽度等属性，都是无效的。
    而比如div，p，li，img等默认情况下的display属性值就是“block”。
    所以对于链接a来说只能这样：display:block;强制将它改成块元素。*/
    display: block;
    padding: 20px;
    text-align: left;
    text-decoration: none;
}

.main-nav-btn:hover {
    background: rgba(255, 255, 255, 0.8);
    color: #624630;
}

.main-nav-btn.active {
    background: #F2EBD9;
    color: #424630;
}

.main-nav-btn i {
    width: 20px;
}

#item-list {
    background: #F2EBD9;
    color: #624630;
    list-style: none;
    /* since aside is floating */
    margin-left: 180px;
    min-height: 250px;
    padding: 10px;
}


/* what is this .notice?*/
#item-list .notice {
    font-size: 16px;
    padding: 60px;
    text-align: center;
}

.item {
    display: flex;
    align-items: center;
    border-bottom: 1px solid #FFFFFF;

    margin: 10px;
    padding: 15px;
    /* flash animation */
    transition: background-color 100ms linear;
}

.item:last-child {
    border: none;
}

.item:hover {
    background: rgba(255, 255, 255, 0.8);
    transition: background-color 100ms linear;
}

.item img {
    border: 1px solid #FFFFFF;
    height: 80px;
    width: 80px;
}

.item>div:first-of-type {
    flex: 1;
    margin-left: 10px;
    margin-right: 10px;
}

.item-name {
    color: #624630;
    font-weight: 400;
    text-decoration: none;
}

.item-name:hover {
    text-decoration: underline;
}

.item-address {
    line-height: 20px;
    padding-right: 20px;
    text-align: right;
}

.stars {
    align-items: center;
    display: flex;
    padding-top: 10px;
}

.fav-link {
    border-left: 1px solid #FFFFFF;
    /* change the mouse when pointing to it */
    cursor: pointer;
    line-height: 60px;
    text-align: center;
    width: 60px;
}

.fav-link:hover {
    color: #F13F3F;
}

/**
 * footer section
 */
footer {
    background: #434343;
    font-size: 0.8em;
    height: 200px;
    position: relative;
}

footer p {
    text-align: center;
}

footer p.title {
    font-size: 1.2em;
    padding: 15px;
}

footer ul {
    align-items: center;
    display: flex;
    padding: 20px;
}

footer ul li {
    flex: 1;
}